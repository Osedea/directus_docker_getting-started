{"version":3,"sources":["webpack:///./src/interfaces/multiselect/input.vue?dd90","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js","webpack:///./src/interfaces/multiselect/input.vue?ac1a","webpack:///src/interfaces/multiselect/input.vue","webpack:///./src/interfaces/multiselect/input.vue?55ec","webpack:///./src/interfaces/multiselect/input.vue"],"names":["module","exports","props","id","type","String","required","name","value","default","length","Number","readonly","Boolean","collection","options","Object","newItem","relation","fields","values","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","$event","updateValue","target","_v","_s","placeholder","_e","_l","display","val","key","domProps","includes","staticRenderFns","mixins","computed","choices","JSON","parse","methods","wrapWithDelimiter","split","$emit","component"],"mappings":"kHAAA,yBAAujB,EAAG,G,qBCA1jBA,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZC,KAAM,CACJH,KAAMC,OACNC,UAAU,GAIZE,MAAO,CACLJ,KAAM,KACNK,QAAS,MAGXL,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZI,OAAQ,CACNN,KAAM,CAACC,OAAQM,QACfF,QAAS,MAGXG,SAAU,CACRR,KAAMS,QACNJ,SAAS,GAGXK,WAAY,CACVV,KAAMC,OACNI,QAAS,MAGXH,SAAU,CACRF,KAAMS,QACNJ,SAAS,GAGXM,QAAS,CACPX,KAAMY,OACNP,QAAS,KAAM,KAGjBQ,QAAS,CACPb,KAAMS,QACNJ,SAAS,GAIXS,SAAU,CACRd,KAAMY,OACNP,QAAS,MAGXU,OAAQ,CACNf,KAAMY,OACNP,QAAS,MAIXW,OAAQ,CACNhB,KAAMY,OACNP,QAAS,S,gECtEf,IAAIY,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,YAAY,SAASC,MAAM,CAAC,GAAKP,EAAIf,KAAK,SAAWe,EAAIV,SAAS,SAAW,IAAIkB,GAAG,CAAC,OAAS,SAASC,GAAQ,OAAOT,EAAIU,YAAYD,EAAOE,OAAOlB,YAAY,CAAEO,EAAIP,QAAmB,YAAEW,EAAG,SAAS,CAACG,MAAM,CAAC,MAAQ,GAAG,SAAWP,EAAIhB,WAAW,CAACgB,EAAIY,GAAG,SAASZ,EAAIa,GAAGb,EAAIP,QAAQqB,aAAa,UAAUd,EAAIe,KAAKf,EAAIgB,GAAIhB,EAAW,QAAE,SAASiB,EAAQC,GAAK,OAAOd,EAAG,SAAS,CAACe,IAAID,EAAIE,SAAS,CAAC,MAAQF,EAAI,SAAWlB,EAAId,OAASc,EAAId,MAAMmC,SAASH,KAAO,CAAClB,EAAIY,GAAG,SAASZ,EAAIa,GAAGI,GAAS,aAAa,IAC9lBK,EAAkB,G,qDCwBtB,GACEC,OAAQ,CAAC,EAAX,GACEC,SAAU,CACRC,QADJ,WAEM,IAAN,uBAEM,OAAKA,GAE+B,kBAAzBxB,KAAKR,QAAQgC,UACtBA,EAAUC,KAAKC,MAAM1B,KAAKR,QAAQgC,UAG7BA,GANc,KASzBG,QAAS,CACPlB,YADJ,SACA,GACM,IAAN,gBACA,mBAAQ,OAAR,+BACA,gBAAQ,OAAR,UACA,OAEUxB,GAASe,KAAKR,QAAQoC,oBACxB3C,EAAQ,IAAhB,eAGMA,EAAQA,EAAM4C,MAAM,KACpB7B,KAAK8B,MAAM,QAAS7C,MCpDoU,I,wBCQ1V8C,EAAY,eACd,EACAjC,EACAuB,GACA,EACA,KACA,WACA,MAIa,aAAAU,E","file":"js/chunk-2d7440a5.3a9ac61f.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=18932b7e&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=18932b7e&lang=scss&scoped=true&\"","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('select',{staticClass:\"select\",attrs:{\"id\":_vm.name,\"disabled\":_vm.readonly,\"multiple\":\"\"},on:{\"change\":function($event){return _vm.updateValue($event.target.options)}}},[(_vm.options.placeholder)?_c('option',{attrs:{\"value\":\"\",\"disabled\":_vm.required}},[_vm._v(\"\\n    \"+_vm._s(_vm.options.placeholder)+\"\\n  \")]):_vm._e(),_vm._l((_vm.choices),function(display,val){return _c('option',{key:val,domProps:{\"value\":val,\"selected\":_vm.value && _vm.value.includes(val)}},[_vm._v(\"\\n    \"+_vm._s(display)+\"\\n  \")])})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <select\n    :id=\"name\"\n    :disabled=\"readonly\"\n    class=\"select\"\n    multiple\n    @change=\"updateValue($event.target.options)\"\n  >\n    <option v-if=\"options.placeholder\" value=\"\" :disabled=\"required\">\n      {{ options.placeholder }}\n    </option>\n    <option\n      v-for=\"(display, val) in choices\"\n      :key=\"val\"\n      :value=\"val\"\n      :selected=\"value && value.includes(val)\"\n    >\n      {{ display }}\n    </option>\n  </select>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  mixins: [mixin],\n  computed: {\n    choices() {\n      let choices = this.options.choices;\n\n      if (!choices) return {};\n\n      if (typeof this.options.choices === \"string\") {\n        choices = JSON.parse(this.options.choices);\n      }\n\n      return choices;\n    }\n  },\n  methods: {\n    updateValue(options) {\n      let value = Array.from(options)\n        .filter(input => input.selected && Boolean(input.value))\n        .map(input => input.value)\n        .join();\n\n      if (value && this.options.wrapWithDelimiter) {\n        value = `,${value},`;\n      }\n\n      value = value.split(\",\");\n      this.$emit(\"input\", value);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.select {\n  transition: all var(--fast) var(--transition);\n  border: var(--input-border-width) solid var(--lighter-gray);\n  border-radius: var(--border-radius);\n  width: 100%;\n  max-width: var(--width-large);\n  font-family: \"Roboto\", sans-serif;\n  height: 130px;\n\n  &:hover {\n    transition: none;\n    border-color: var(--light-gray);\n  }\n  &:focus {\n    border-color: var(--darker-gray);\n    option {\n      color: var(--dark-gray);\n    }\n  }\n  option {\n    transition: color var(--fast) var(--transition);\n    padding: 5px 10px;\n    color: var(--gray);\n    &:hover {\n      transition: none;\n      color: var(--darker-gray);\n    }\n    &:checked {\n      background: var(--darkest-gray)\n        linear-gradient(0deg, var(--darkest-gray) 0%, var(--darkest-gray) 100%);\n      position: relative;\n      color: var(--white);\n      -webkit-text-fill-color: var(--white);\n\n      &::after {\n        content: \"check\";\n        font-family: \"Material Icons\";\n        font-size: 24px;\n        position: absolute;\n        right: 10px;\n        top: 50%;\n        transform: translateY(-54%);\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=18932b7e&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=18932b7e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"18932b7e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}