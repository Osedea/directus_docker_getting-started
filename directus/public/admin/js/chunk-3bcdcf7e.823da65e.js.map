{"version":3,"sources":["webpack:///./src/interfaces/files/display.vue?86fc","webpack:///src/interfaces/files/display.vue","webpack:///./src/interfaces/files/display.vue?0aef","webpack:///./src/interfaces/files/display.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","value","length","staticRenderFns","mixins","component","module","exports","props","id","type","String","required","name","default","Number","readonly","Boolean","collection","options","Object","newItem","relation","fields","values"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,WAAW,CAACN,EAAIO,GAAG,OAAOP,EAAIQ,GAAGP,KAAKQ,MAAMC,QAAQ,QAAQV,EAAIQ,GAAyB,IAAtBP,KAAKQ,MAAMC,QAAgBT,KAAKQ,MAAMC,OAAS,EAAI,IAAM,MAAM,SACpPC,EAAkB,G,qBCQtB,GACEC,OAAQ,CAAC,EAAX,ICVgW,I,YCO5VC,EAAY,eACd,EACAd,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAE,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZC,KAAM,CACJH,KAAMC,OACNC,UAAU,GAIZX,MAAO,CACLS,KAAM,KACNI,QAAS,MAGXJ,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZV,OAAQ,CACNQ,KAAM,CAACC,OAAQI,QACfD,QAAS,MAGXE,SAAU,CACRN,KAAMO,QACNH,SAAS,GAGXI,WAAY,CACVR,KAAMC,OACNG,QAAS,MAGXF,SAAU,CACRF,KAAMO,QACNH,SAAS,GAGXK,QAAS,CACPT,KAAMU,OACNN,QAAS,KAAM,KAGjBO,QAAS,CACPX,KAAMO,QACNH,SAAS,GAIXQ,SAAU,CACRZ,KAAMU,OACNN,QAAS,MAGXS,OAAQ,CACNb,KAAMU,OACNN,QAAS,MAIXU,OAAQ,CACNd,KAAMU,OACNN,QAAS","file":"js/chunk-3bcdcf7e.823da65e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"no-wrap\"},[_vm._v(\"\\n  \"+_vm._s(this.value.length)+\" File\"+_vm._s(this.value.length === 0 || this.value.length > 1 ? \"s\" : null)+\"\\n\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"no-wrap\">\n    {{ this.value.length }} File{{ this.value.length === 0 || this.value.length > 1 ? \"s\" : null }}\n  </div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  mixins: [mixin]\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./display.vue?vue&type=template&id=3b488ceb&\"\nimport script from \"./display.vue?vue&type=script&lang=js&\"\nexport * from \"./display.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}