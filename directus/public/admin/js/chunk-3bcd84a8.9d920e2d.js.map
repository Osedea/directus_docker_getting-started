{"version":3,"sources":["webpack:///./src/interfaces/hashed/display.vue?07a6","webpack:///src/interfaces/hashed/display.vue","webpack:///./src/interfaces/hashed/display.vue?2ee8","webpack:///./src/interfaces/hashed/display.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","style","color","colorChange","attrs","icon","staticRenderFns","name","mixins","computed","value","component","module","exports","props","id","type","String","required","default","length","Number","readonly","Boolean","collection","options","Object","newItem","relation","fields","values"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,YAAY,kBAAkBC,MAAM,CAAGC,MAAQ,SAAWR,EAAIS,YAAc,KAAQC,MAAM,CAAC,KAAOV,EAAIW,SAC/MC,EAAkB,G,qBCMtB,GACEC,KAAM,iBACNC,OAAQ,CAAC,EAAX,GACEC,SAAU,CACRJ,KADJ,WAEM,OAAOV,KAAKe,MAAQ,eAAiB,aAEvCP,YAJJ,WAKM,OAAOR,KAAKe,MAAQ,YAAc,aCfwT,I,YCO5VC,EAAY,eACd,EACAlB,EACAa,GACA,EACA,KACA,WACA,MAIa,aAAAK,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZX,KAAM,CACJS,KAAMC,OACNC,UAAU,GAIZR,MAAO,CACLM,KAAM,KACNG,QAAS,MAGXH,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZE,OAAQ,CACNJ,KAAM,CAACC,OAAQI,QACfF,QAAS,MAGXG,SAAU,CACRN,KAAMO,QACNJ,SAAS,GAGXK,WAAY,CACVR,KAAMC,OACNE,QAAS,MAGXD,SAAU,CACRF,KAAMO,QACNJ,SAAS,GAGXM,QAAS,CACPT,KAAMU,OACNP,QAAS,KAAM,KAGjBQ,QAAS,CACPX,KAAMO,QACNJ,SAAS,GAIXS,SAAU,CACRZ,KAAMU,OACNP,QAAS,MAGXU,OAAQ,CACNb,KAAMU,OACNP,QAAS,MAIXW,OAAQ,CACNd,KAAMU,OACNP,QAAS","file":"js/chunk-3bcd84a8.9d920e2d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-icon',{staticClass:\"readonly-hashed\",style:({ color: (\"var(--\" + _vm.colorChange + \")\") }),attrs:{\"name\":_vm.icon}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-icon :name=\"icon\" class=\"readonly-hashed\" :style=\"{ color: `var(--${colorChange})` }\" />\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  name: \"ReadonlyHashed\",\n  mixins: [mixin],\n  computed: {\n    icon() {\n      return this.value ? \"lock_outline\" : \"lock_open\";\n    },\n    colorChange() {\n      return this.value ? \"dark-gray\" : \"warning\";\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./display.vue?vue&type=template&id=08d8b212&scoped=true&\"\nimport script from \"./display.vue?vue&type=script&lang=js&\"\nexport * from \"./display.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08d8b212\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}