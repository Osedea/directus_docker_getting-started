{"version":3,"sources":["webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js","webpack:///./src/interfaces/toggle-icon/input.vue?7514","webpack:///src/interfaces/toggle-icon/input.vue","webpack:///./src/interfaces/toggle-icon/input.vue?d6cc","webpack:///./src/interfaces/toggle-icon/input.vue","webpack:///./src/interfaces/toggle-icon/input.vue?bca4"],"names":["module","exports","props","id","type","String","required","name","value","default","length","Number","readonly","Boolean","collection","options","Object","newItem","relation","fields","values","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","randomID","on","$event","updateValue","target","checked","style","color","colorChange","icon","_v","_s","textChange","staticRenderFns","mixins","computed","iconActive","iconInactive","colorActive","colorInactive","textActive","textInactive","methods","$emit","component"],"mappings":"6HAAAA,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZC,KAAM,CACJH,KAAMC,OACNC,UAAU,GAIZE,MAAO,CACLJ,KAAM,KACNK,QAAS,MAGXL,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZI,OAAQ,CACNN,KAAM,CAACC,OAAQM,QACfF,QAAS,MAGXG,SAAU,CACRR,KAAMS,QACNJ,SAAS,GAGXK,WAAY,CACVV,KAAMC,OACNI,QAAS,MAGXH,SAAU,CACRF,KAAMS,QACNJ,SAAS,GAGXM,QAAS,CACPX,KAAMY,OACNP,QAAS,KAAM,KAGjBQ,QAAS,CACPb,KAAMS,QACNJ,SAAS,GAIXS,SAAU,CACRd,KAAMY,OACNP,QAAS,MAGXU,OAAQ,CACNf,KAAMY,OACNP,QAAS,MAIXW,OAAQ,CACNhB,KAAMY,OACNP,QAAS,S,4CCtEf,IAAIY,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,QAAQ,CAACG,MAAM,CAAC,GAAKP,EAAIQ,SAAS,KAAO,WAAW,SAAWR,EAAIV,UAAUmB,GAAG,CAAC,OAAS,SAASC,GAAQ,OAAOV,EAAIW,YAAYD,EAAOE,OAAOC,aAAaT,EAAG,QAAQ,CAACU,MAAM,CAAGC,MAAQ,SAAWf,EAAIgB,YAAc,KAAQT,MAAM,CAAC,IAAMP,EAAIQ,WAAW,CAACJ,EAAG,SAAS,CAACG,MAAM,CAAC,KAAOP,EAAIiB,QAAQb,EAAG,OAAO,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,gBAAgB,MAC/dC,EAAkB,G,0CCkBtB,GACEpC,KAAM,sBACNqC,OAAQ,CAAC,EAAX,GACEC,SAAU,CACRN,KADJ,WAEM,OAAOhB,KAAKf,MAAQe,KAAKR,QAAQ+B,WAAavB,KAAKR,QAAQgC,cAE7DT,YAJJ,WAKM,OAAOf,KAAKf,MAAQe,KAAKR,QAAQiC,YAAczB,KAAKR,QAAQkC,eAE9DP,WAPJ,WAQM,OAAOnB,KAAKf,MAAQe,KAAKR,QAAQmC,WAAa3B,KAAKR,QAAQoC,cAE7DrB,SAVJ,WAWM,OAAO,EAAb,eAGEsB,QAAS,CACPnB,YADJ,SACA,GACMV,KAAK8B,MAAM,QAAS7C,MCtCoU,I,wBCQ1V8C,EAAY,eACd,EACAjC,EACAsB,GACA,EACA,KACA,WACA,MAIa,aAAAW,E,2CCnBf,0BAAujB,EAAG","file":"js/chunk-5531475e.db17b216.js","sourcesContent":["module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"interface-toggle-icon\"},[_c('input',{attrs:{\"id\":_vm.randomID,\"type\":\"checkbox\",\"disabled\":_vm.readonly},on:{\"change\":function($event){return _vm.updateValue($event.target.checked)}}}),_c('label',{style:({ color: (\"var(--\" + _vm.colorChange + \")\") }),attrs:{\"for\":_vm.randomID}},[_c('v-icon',{attrs:{\"name\":_vm.icon}}),_c('span',[_vm._v(_vm._s(_vm.textChange))])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"interface-toggle-icon\">\n    <input\n      :id=\"randomID\"\n      type=\"checkbox\"\n      :disabled=\"readonly\"\n      @change=\"updateValue($event.target.checked)\"\n    />\n    <label :for=\"randomID\" :style=\"{ color: `var(--${colorChange})` }\">\n      <v-icon :name=\"icon\" />\n      <span>{{ textChange }}</span>\n    </label>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport shortid from \"shortid\";\n\nexport default {\n  name: \"InterfaceToggleIcon\",\n  mixins: [mixin],\n  computed: {\n    icon() {\n      return this.value ? this.options.iconActive : this.options.iconInactive;\n    },\n    colorChange() {\n      return this.value ? this.options.colorActive : this.options.colorInactive;\n    },\n    textChange() {\n      return this.value ? this.options.textActive : this.options.textInactive;\n    },\n    randomID() {\n      return shortid.generate();\n    }\n  },\n  methods: {\n    updateValue(value) {\n      this.$emit(\"input\", value);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.interface-toggle-icon {\n  user-select: none;\n}\n\ninput {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: polygon(0px 0px, 0px 0px, 0px 0px, 0px 0px);\n}\n\ninput[disabled] + label {\n  opacity: 0.6;\n}\n\nlabel {\n  cursor: pointer;\n  display: inline-block;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=b6dfa954&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=b6dfa954&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b6dfa954\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=b6dfa954&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=b6dfa954&lang=scss&scoped=true&\""],"sourceRoot":""}