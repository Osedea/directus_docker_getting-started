{"version":3,"sources":["webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js","webpack:///./src/interfaces/user-roles/input.vue?9f00","webpack:///src/interfaces/user-roles/input.vue","webpack:///./src/interfaces/user-roles/input.vue?897a","webpack:///./src/interfaces/user-roles/input.vue"],"names":["module","exports","props","id","type","String","required","name","value","default","length","Number","readonly","Boolean","collection","options","Object","newItem","relation","fields","values","render","_vm","this","_h","$createElement","_c","_self","attrs","$t","selectOptions","currentRoleID","on","emitValue","staticRenderFns","mixins","data","loading","roles","error","computed","currentRole","role","created","fetchRoles","methods","$api","currentJunctionRecordID","$emit","component"],"mappings":"mGAAAA,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZC,KAAM,CACJH,KAAMC,OACNC,UAAU,GAIZE,MAAO,CACLJ,KAAM,KACNK,QAAS,MAGXL,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZI,OAAQ,CACNN,KAAM,CAACC,OAAQM,QACfF,QAAS,MAGXG,SAAU,CACRR,KAAMS,QACNJ,SAAS,GAGXK,WAAY,CACVV,KAAMC,OACNI,QAAS,MAGXH,SAAU,CACRF,KAAMS,QACNJ,SAAS,GAGXM,QAAS,CACPX,KAAMY,OACNP,QAAS,KAAM,KAGjBQ,QAAS,CACPb,KAAMS,QACNJ,SAAS,GAIXS,SAAU,CACRd,KAAMY,OACNP,QAAS,MAGXU,OAAQ,CACNf,KAAMY,OACNP,QAAS,MAIXW,OAAQ,CACNhB,KAAMY,OACNP,QAAS,S,yCCtEf,IAAIY,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACE,MAAM,CAAC,GAAKN,EAAIf,KAAK,KAAO,gBAAgB,KAAOe,EAAIf,KAAK,YAAce,EAAIO,GAAG,cAAc,QAAUP,EAAIQ,cAAc,MAAQR,EAAIS,eAAeC,GAAG,CAAC,MAAQV,EAAIW,cACjRC,EAAkB,G,6CCctB,GACE3B,KAAM,oBACN4B,OAAQ,CAAC,EAAX,GACEC,KAHF,WAII,MAAO,CACLC,SAAS,EACTC,MAAO,GACPC,MAAO,OAGXC,SAAU,CACRV,cADJ,WACA,WACA,KAYM,OAVAP,KAAKe,MACX,mBACQ,QAAR,sBAEA,WAEA,oBACQ,EAAR,eAGavB,GAET0B,YAhBJ,WAiBM,IAAN,gDAEM,GAAN,WAAU,OAAV,OAAU,CAAV,IACQ,IAAR,iDACQ,OAAOC,GAAQA,EAAK,GAGtB,OAAOlC,GAETuB,cA1BJ,WA2BM,OAAOR,KAAKkB,aAAelB,KAAKkB,YAAYtC,KAGhDwC,QAxCF,WAyCIpB,KAAKqB,cAEPC,QAAS,CACPD,WADJ,WACA,WACMrB,KAAKc,SAAU,EAEfd,KAAKuB,KACX,WACA,iBAAQ,OAAR,SACA,iBACQ,EAAR,QACQ,EAAR,WACQ,EAAR,aAEA,kBACQ,EAAR,WACQ,EAAR,WAGIb,UAjBJ,SAiBA,GACM,IAAN,8CAEUc,EACFxB,KAAKyB,MAAM,QAAS,CAC5B,CACU,GAAV,EACU,KAAV,KAIQzB,KAAKyB,MAAM,QAAS,CAC5B,CACU,KAAV,QCxF8V,I,YCO1VC,EAAY,eACd,EACA5B,EACAa,GACA,EACA,KACA,WACA,MAIa,aAAAe,E","file":"js/chunk-3be3b227.5fe869a3.js","sourcesContent":["module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-select',{attrs:{\"id\":_vm.name,\"icon\":\"perm_identity\",\"name\":_vm.name,\"placeholder\":_vm.$t('choose_one'),\"options\":_vm.selectOptions,\"value\":_vm.currentRoleID},on:{\"input\":_vm.emitValue}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-select\n    :id=\"name\"\n    icon=\"perm_identity\"\n    :name=\"name\"\n    :placeholder=\"$t('choose_one')\"\n    :options=\"selectOptions\"\n    :value=\"currentRoleID\"\n    @input=\"emitValue\"\n  ></v-select>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  name: \"InterfaceUserRole\",\n  mixins: [mixin],\n  data() {\n    return {\n      loading: false,\n      roles: [],\n      error: null\n    };\n  },\n  computed: {\n    selectOptions() {\n      const options = {};\n\n      this.roles\n        .filter(role => {\n          if (this.options.showPublic) return true;\n\n          return role.id !== 2;\n        }) // 2 = public role\n        .forEach(role => {\n          options[role.id] = role.name;\n        });\n\n      return options;\n    },\n    currentRole() {\n      const value = this.value && this.value[0] && this.value[0].role;\n\n      if (typeof value !== \"object\") {\n        const role = this.roles.filter(role => role.id == value);\n        return role && role[0];\n      }\n\n      return value;\n    },\n    currentRoleID() {\n      return this.currentRole && this.currentRole.id;\n    }\n  },\n  created() {\n    this.fetchRoles();\n  },\n  methods: {\n    fetchRoles() {\n      this.loading = true;\n\n      this.$api\n        .getRoles()\n        .then(res => res.data)\n        .then(roles => {\n          this.roles = roles;\n          this.loading = false;\n          this.error = null;\n        })\n        .catch(error => {\n          this.loading = false;\n          this.error = error;\n        });\n    },\n    emitValue(value) {\n      const currentJunctionRecordID = this.value && this.value[0] && this.value[0].id;\n\n      if (currentJunctionRecordID) {\n        this.$emit(\"input\", [\n          {\n            id: currentJunctionRecordID,\n            role: value\n          }\n        ]);\n      } else {\n        this.$emit(\"input\", [\n          {\n            role: value\n          }\n        ]);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=1e345699&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e345699\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}