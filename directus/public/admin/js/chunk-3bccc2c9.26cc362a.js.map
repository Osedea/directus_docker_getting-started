{"version":3,"sources":["webpack:///./src/interfaces/checkboxes/display.vue?6edd","webpack:///src/interfaces/checkboxes/display.vue","webpack:///./src/interfaces/checkboxes/display.vue?3fa3","webpack:///./src/interfaces/checkboxes/display.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","displayValue","staticRenderFns","name","mixins","computed","selection","value","options","wrap","pop","shift","formatting","type","display","toString","component","module","exports","props","id","String","required","default","length","Number","readonly","Boolean","collection","Object","newItem","relation","fields","values"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAACN,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,kBACpKC,EAAkB,G,2CCMtB,GACEC,KAAM,qBACNC,OAAQ,CAAC,EAAX,GACEC,SAAU,CACRC,UADJ,WAEM,GAAkB,MAAdb,KAAKc,MAAe,MAAO,GAE/B,IAAN,yDAKM,OAJId,KAAKe,QAAQC,OACfH,EAAUI,MACVJ,EAAUK,SAELL,GAETL,aAXJ,WAWA,WACA,mCACM,OAAIR,KAAKe,QAAQI,YAA4B,UAAdnB,KAAKoB,KAC3BC,EACf,gBAAU,OAAV,8CACA,WAEaA,EAAQC,cC5B2U,I,YCO5VC,EAAY,eACd,EACAzB,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAc,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFP,KAAMQ,OACNC,UAAU,GAGZnB,KAAM,CACJU,KAAMQ,OACNC,UAAU,GAIZf,MAAO,CACLM,KAAM,KACNU,QAAS,MAGXV,KAAM,CACJA,KAAMQ,OACNC,UAAU,GAGZE,OAAQ,CACNX,KAAM,CAACQ,OAAQI,QACfF,QAAS,MAGXG,SAAU,CACRb,KAAMc,QACNJ,SAAS,GAGXK,WAAY,CACVf,KAAMQ,OACNE,QAAS,MAGXD,SAAU,CACRT,KAAMc,QACNJ,SAAS,GAGXf,QAAS,CACPK,KAAMgB,OACNN,QAAS,KAAM,KAGjBO,QAAS,CACPjB,KAAMc,QACNJ,SAAS,GAIXQ,SAAU,CACRlB,KAAMgB,OACNN,QAAS,MAGXS,OAAQ,CACNnB,KAAMgB,OACNN,QAAS,MAIXU,OAAQ,CACNpB,KAAMgB,OACNN,QAAS","file":"js/chunk-3bccc2c9.26cc362a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"readonly-checkboxes no-wrap\"},[_vm._v(_vm._s(_vm.displayValue))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"readonly-checkboxes no-wrap\">{{ displayValue }}</div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  name: \"ReadonlyCheckboxes\",\n  mixins: [mixin],\n  computed: {\n    selection() {\n      if (this.value == null) return [];\n\n      const selection = this.type === \"VARCHAR\" ? this.value.split(\",\") : this.value;\n      if (this.options.wrap) {\n        selection.pop();\n        selection.shift();\n      }\n      return selection;\n    },\n    displayValue() {\n      let display = this.selection ? this.selection : [];\n      if (this.options.formatting && this.type === \"array\") {\n        return display\n          .map(val => (this.options.choices[val] ? this.options.choices[val] : val))\n          .toString();\n      }\n      return display.toString();\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./display.vue?vue&type=template&id=66beeb7a&\"\nimport script from \"./display.vue?vue&type=script&lang=js&\"\nexport * from \"./display.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}