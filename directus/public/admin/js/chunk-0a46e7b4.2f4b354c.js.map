{"version":3,"sources":["webpack:///./src/interfaces/checkboxes/input.vue?e60b","webpack:///src/interfaces/checkboxes/input.vue","webpack:///./src/interfaces/checkboxes/input.vue?9cec","webpack:///./src/interfaces/checkboxes/input.vue","webpack:///./src/interfaces/checkboxes/input.vue?88f7","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","cols","options","single","attrs","model","value","callback","$$v","choices","expression","_l","choice","index","key","id","_e","on","$event","checked","directives","name","rawName","$t","domProps","target","composing","$set","readonly","addCustom","_v","_s","staticRenderFns","mixins","data","watch","deep","handler","initialized","wrap","newValue","$emit","created","initChoices","methods","allow_other","filter","obj","custom","component","module","exports","props","type","String","required","default","length","Number","Boolean","collection","Object","newItem","relation","fields","values"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,YAAY,CAACE,YAAY,uBAAuBC,MAAM,CAAEC,MAAOR,EAAIS,QAAQC,QAASC,MAAM,CAAC,QAAU,OAAOC,MAAM,CAACC,MAAOb,EAAW,QAAEc,SAAS,SAAUC,GAAMf,EAAIgB,QAAQD,GAAKE,WAAW,YAAY,CAACjB,EAAIkB,GAAIlB,EAAW,QAAE,SAASmB,EAAOC,GAAO,OAAOhB,EAAG,MAAM,CAACiB,IAAIF,EAAOG,GAAGhB,YAAY,UAAU,CAAEN,EAAIS,QAAiB,UAAEL,EAAG,SAAS,CAACE,YAAY,cAAcK,MAAM,CAAC,KAAO,oBAAoBX,EAAIuB,KAAMJ,EAAa,OAAE,CAACf,EAAG,SAAS,CAACoB,GAAG,CAAC,MAAQ,SAASC,GAAQzB,EAAIgB,QAAQI,GAAOM,SAAW1B,EAAIgB,QAAQI,GAAOM,WAAW,CAACtB,EAAG,SAAS,CAACO,MAAM,CAAC,MAAQ,cAAc,KAAOQ,EAAOO,QAAU,YAAc,8BAA8B,GAAGtB,EAAG,QAAQ,CAACuB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUhB,MAAOb,EAAIgB,QAAQI,GAAU,IAAEH,WAAW,uBAAuBN,MAAM,CAAC,YAAcX,EAAI8B,GAAG,SAAW,OAAOC,SAAS,CAAC,MAAS/B,EAAIgB,QAAQI,GAAU,KAAGI,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOO,OAAOC,WAAqBjC,EAAIkC,KAAKlC,EAAIgB,QAAQI,GAAQ,MAAOK,EAAOO,OAAOnB,YAAYT,EAAG,aAAa,CAACuB,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYhB,MAAOM,EAAY,MAAEF,WAAW,iBAAiBN,MAAM,CAAC,GAAKQ,EAAOG,GAAG,KAAO,eAAe,MAAQH,EAAOE,IAAI,SAAWrB,EAAImC,SAAS,MAAQhB,EAAON,MAAM,QAAUM,EAAOO,SAASF,GAAG,CAAC,OAAS,SAASC,GAAQzB,EAAIgB,QAAQI,GAAOM,SAAW1B,EAAIgB,QAAQI,GAAOM,aAAa,KAAM1B,EAAIS,QAAmB,YAAEL,EAAG,SAAS,CAACoB,GAAG,CAAC,MAAQxB,EAAIoC,YAAY,CAACpC,EAAIqC,GAAGrC,EAAIsC,GAAGtC,EAAI8B,GAAG,YAAY,SAAS9B,EAAIuB,MAAM,IAClgDgB,EAAkB,G,gGCuCtB,GACEX,KAAM,sBACNY,OAAQ,CAAC,EAAX,GACEC,KAHF,WAII,MAAO,CACLzB,QAAS,KAGb0B,MAAO,CACL1B,QAAS,CACP2B,MAAM,EACNC,QAFN,SAEA,GACQ,IAAyB,IAArB3C,KAAK4C,YAAT,CACA,IAAR,yEAEY5C,KAAKQ,QAAQqC,OACfC,EAAW,CAAC,IAAtB,gCAGQ9C,KAAK+C,MAAM,QAASD,OAI1BE,QAvBF,WAwBIhD,KAAKiD,eAEPC,QAAS,CACPD,YADJ,WACA,WACA,gCAEA,aACA,mBAAQ,OAAR,IACA,gBACQ,MAAR,CACU,GAAV,eACU,IAAV,EACU,MAAV,KACU,QAAV,wBACU,SAAV,KAKWjD,KAAKQ,QAAQ2C,cAChBpC,EAAUA,EAAQqC,OAAO,SAAjC,GACU,OAAsB,IAAfC,EAAIC,UAIf,IAAN,iBACA,mBACQ,OAAR,0BAEA,gBACQ,MAAR,CACU,GAAV,eACU,IAAV,EACU,MAAV,KACU,QAAV,EACU,SAAV,KAIMvC,EAAU,GAAhB,4CAEMf,KAAKe,QAAUA,EACff,KAAK4C,aAAc,GAErBT,UA1CJ,WA2CMnC,KAAKe,QAAU,GAArB,sBACA,cADA,CAEA,CACQ,GAAR,eACQ,IAAR,GACQ,QAAR,EACQ,SAAR,QCnH8V,I,wBCQ1VwC,EAAY,eACd,EACAzD,EACAwC,GACA,EACA,KACA,WACA,MAIa,aAAAiB,E,6CCnBf,0BAAujB,EAAG,G,qBCA1jBC,EAAOC,QAAU,CACfC,MAAO,CAILrC,GAAI,CACFsC,KAAMC,OACNC,UAAU,GAGZlC,KAAM,CACJgC,KAAMC,OACNC,UAAU,GAIZjD,MAAO,CACL+C,KAAM,KACNG,QAAS,MAGXH,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZE,OAAQ,CACNJ,KAAM,CAACC,OAAQI,QACfF,QAAS,MAGX5B,SAAU,CACRyB,KAAMM,QACNH,SAAS,GAGXI,WAAY,CACVP,KAAMC,OACNE,QAAS,MAGXD,SAAU,CACRF,KAAMM,QACNH,SAAS,GAGXtD,QAAS,CACPmD,KAAMQ,OACNL,QAAS,KAAM,KAGjBM,QAAS,CACPT,KAAMM,QACNH,SAAS,GAIXO,SAAU,CACRV,KAAMQ,OACNL,QAAS,MAGXQ,OAAQ,CACNX,KAAMQ,OACNL,QAAS,MAIXS,OAAQ,CACNZ,KAAMQ,OACNL,QAAS,S","file":"js/chunk-0a46e7b4.2f4b354c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('draggable',{staticClass:\"interface-checkboxes\",class:{ cols: !_vm.options.single },attrs:{\"element\":\"div\"},model:{value:(_vm.choices),callback:function ($$v) {_vm.choices=$$v},expression:\"choices\"}},[_vm._l((_vm.choices),function(choice,index){return _c('div',{key:choice.id,staticClass:\"choice\"},[(_vm.options.draggable)?_c('v-icon',{staticClass:\"drag-handle\",attrs:{\"name\":\"drag_indicator\"}}):_vm._e(),(choice.custom)?[_c('button',{on:{\"click\":function($event){_vm.choices[index].checked = !_vm.choices[index].checked}}},[_c('v-icon',{attrs:{\"color\":\"darker-gray\",\"name\":choice.checked ? 'check_box' : 'check_box_outline_blank'}})],1),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.choices[index].key),expression:\"choices[index].key\"}],attrs:{\"placeholder\":_vm.$t('other') + '...'},domProps:{\"value\":(_vm.choices[index].key)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.choices[index], \"key\", $event.target.value)}}})]:_c('v-checkbox',{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(choice.value),expression:\"choice.value\"}],attrs:{\"id\":choice.id,\"name\":\"list-sorting\",\"value\":choice.key,\"disabled\":_vm.readonly,\"label\":choice.value,\"checked\":choice.checked},on:{\"change\":function($event){_vm.choices[index].checked = !_vm.choices[index].checked}}})],2)}),(_vm.options.allow_other)?_c('button',{on:{\"click\":_vm.addCustom}},[_vm._v(_vm._s(_vm.$t(\"add_new\"))+\"...\")]):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <draggable\n    v-model=\"choices\"\n    element=\"div\"\n    class=\"interface-checkboxes\"\n    :class=\"{ cols: !options.single }\"\n  >\n    <div v-for=\"(choice, index) in choices\" :key=\"choice.id\" class=\"choice\">\n      <v-icon v-if=\"options.draggable\" class=\"drag-handle\" name=\"drag_indicator\" />\n\n      <template v-if=\"choice.custom\">\n        <button @click=\"choices[index].checked = !choices[index].checked\">\n          <v-icon\n            color=\"darker-gray\"\n            :name=\"choice.checked ? 'check_box' : 'check_box_outline_blank'\"\n          />\n        </button>\n        <input v-model=\"choices[index].key\" :placeholder=\"$t('other') + '...'\" />\n      </template>\n\n      <v-checkbox\n        v-else\n        :id=\"choice.id\"\n        v-tooltip=\"choice.value\"\n        name=\"list-sorting\"\n        :value=\"choice.key\"\n        :disabled=\"readonly\"\n        :label=\"choice.value\"\n        :checked=\"choice.checked\"\n        @change=\"choices[index].checked = !choices[index].checked\"\n      />\n    </div>\n    <button v-if=\"options.allow_other\" @click=\"addCustom\">{{ $t(\"add_new\") }}...</button>\n  </draggable>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport shortid from \"shortid\";\n\nexport default {\n  name: \"InterfaceCheckboxes\",\n  mixins: [mixin],\n  data() {\n    return {\n      choices: []\n    };\n  },\n  watch: {\n    choices: {\n      deep: true,\n      handler(val) {\n        if (this.initialized !== true) return;\n        let newValue = val.filter(choice => choice.checked).map(choice => choice.key);\n\n        if (this.options.wrap) {\n          newValue = [\"\", ...newValue, \"\"];\n        }\n\n        this.$emit(\"input\", newValue);\n      }\n    }\n  },\n  created() {\n    this.initChoices();\n  },\n  methods: {\n    initChoices() {\n      const optionChoices = _.clone(this.options.choices);\n\n      let choices = this.value\n        .filter(key => key) // filter out empty strings\n        .map(key => {\n          return {\n            id: shortid.generate(),\n            key: key,\n            value: optionChoices[key],\n            custom: optionChoices.hasOwnProperty(key) === false,\n            checked: true\n          };\n        });\n\n      // Remove custom values if \"allow_other\" is not enabled\n      if (!this.options.allow_other) {\n        choices = choices.filter(function(obj) {\n          return obj.custom !== true;\n        });\n      }\n\n      const nonChecked = Object.keys(optionChoices)\n        .filter(key => {\n          return this.value.includes(key) === false;\n        })\n        .map(key => {\n          return {\n            id: shortid.generate(),\n            key: key,\n            value: optionChoices[key],\n            custom: false,\n            checked: false\n          };\n        });\n\n      choices = [...choices, ...nonChecked];\n\n      this.choices = choices;\n      this.initialized = true;\n    },\n    addCustom() {\n      this.choices = [\n        ...this.choices,\n        {\n          id: shortid.generate(),\n          key: \"\",\n          custom: true,\n          checked: true\n        }\n      ];\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.interface-checkboxes {\n  display: grid;\n  grid-gap: 12px;\n}\n\n.cols {\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n}\n\n.drag-handle {\n  cursor: grab;\n}\n\n.choice {\n  display: flex;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .form-checkbox {\n    width: 100%;\n  }\n\n  input {\n    border: 0;\n    border-bottom: 1px solid var(--gray);\n    width: 100%;\n    margin-left: 4px;\n    width: 100%;\n    max-width: max-content;\n  }\n\n  input:hover {\n    border-color: var(--darker-gray);\n  }\n\n  input:focus {\n    border-color: var(--darkest-gray);\n  }\n\n  input::placeholder {\n    color: var(--light-gray);\n  }\n}\n\nbutton {\n  text-align: left;\n  color: var(--accent);\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=1f3dd916&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=1f3dd916&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1f3dd916\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=1f3dd916&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=1f3dd916&lang=scss&scoped=true&\"","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}