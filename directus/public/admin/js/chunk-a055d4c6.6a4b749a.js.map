{"version":3,"sources":["webpack:///./src/interfaces/language/input.vue?bbeb","webpack:///src/interfaces/language/input.vue","webpack:///./src/interfaces/language/input.vue?da23","webpack:///./src/interfaces/language/input.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","$t","value","on","$event","$emit","_l","name","code","key","domProps","_v","_s","staticRenderFns","mixins","computed","languages","options","limit","$i18n","availableLanguages","component","module","exports","props","id","type","String","required","default","length","Number","readonly","Boolean","collection","Object","newItem","relation","fields","values"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,kBAAkB,CAACE,MAAM,CAAC,YAAcN,EAAIO,GAAG,uCAAuC,MAAQP,EAAIQ,OAAOC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIW,MAAM,QAASD,MAAWV,EAAIY,GAAIZ,EAAa,UAAE,SAASa,EAAKC,GAAM,OAAOV,EAAG,SAAS,CAACW,IAAID,EAAKE,SAAS,CAAC,MAAQF,IAAO,CAACd,EAAIiB,GAAG,SAASjB,EAAIkB,GAAGL,GAAM,YAAY,IACrZM,EAAkB,G,iCCetB,GACEC,OAAQ,CAAC,EAAX,GACEC,SAAU,CACRC,UADJ,WAEM,OAAIrB,KAAKsB,QAAQC,MACRvB,KAAKwB,MAAMC,mBAGb,KCxBiV,I,YCO1VC,EAAY,eACd,EACA5B,EACAoB,GACA,EACA,KACA,WACA,MAIa,aAAAQ,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZrB,KAAM,CACJmB,KAAMC,OACNC,UAAU,GAIZ1B,MAAO,CACLwB,KAAM,KACNG,QAAS,MAGXH,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZE,OAAQ,CACNJ,KAAM,CAACC,OAAQI,QACfF,QAAS,MAGXG,SAAU,CACRN,KAAMO,QACNJ,SAAS,GAGXK,WAAY,CACVR,KAAMC,OACNE,QAAS,MAGXD,SAAU,CACRF,KAAMO,QACNJ,SAAS,GAGXZ,QAAS,CACPS,KAAMS,OACNN,QAAS,KAAM,KAGjBO,QAAS,CACPV,KAAMO,QACNJ,SAAS,GAIXQ,SAAU,CACRX,KAAMS,OACNN,QAAS,MAGXS,OAAQ,CACNZ,KAAMS,OACNN,QAAS,MAIXU,OAAQ,CACNb,KAAMS,OACNN,QAAS,S","file":"js/chunk-a055d4c6.6a4b749a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-simple-select',{attrs:{\"placeholder\":_vm.$t('interfaces-language-select_language'),\"value\":_vm.value},on:{\"input\":function($event){return _vm.$emit('input', $event)}}},_vm._l((_vm.languages),function(name,code){return _c('option',{key:code,domProps:{\"value\":code}},[_vm._v(\"\\n    \"+_vm._s(name)+\"\\n  \")])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-simple-select\n    :placeholder=\"$t('interfaces-language-select_language')\"\n    :value=\"value\"\n    @input=\"$emit('input', $event)\"\n  >\n    <option v-for=\"(name, code) in languages\" :key=\"code\" :value=\"code\">\n      {{ name }}\n    </option>\n  </v-simple-select>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport allLanguages from \"./languages.json\";\n\nexport default {\n  mixins: [mixin],\n  computed: {\n    languages() {\n      if (this.options.limit) {\n        return this.$i18n.availableLanguages;\n      }\n\n      return allLanguages;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=8b4f26ba&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8b4f26ba\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}